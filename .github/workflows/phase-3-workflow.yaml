name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [javascript, python]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # JavaScript Linting
      - name: Set up Node.js (for JavaScript)
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies (JavaScript)
        if: matrix.language == 'javascript'
        run: |
          cd my-javascript-project  # Navigate to JavaScript project
          npm ci  # Install npm dependencies

      - name: Run ESLint (JavaScript)
        if: matrix.language == 'javascript'
        run: |
          cd my-javascript-project
          npx eslint .  # Run ESLint to check for code style issues

      # Python Linting
      - name: Set up Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (Python)
        if: matrix.language == 'python'
        run: |
          cd my-python-project  # Navigate to Python project
          python -m pip install --upgrade pip  # Upgrade pip
          pip install -r requirements.txt  # Install project dependencies

      - name: Run flake8 (Python)
        if: matrix.language == 'python'
        run: |
          cd my-python-project
          flake8 .  # Run flake8 for Python linting

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        language: [javascript, python]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js (for JavaScript)
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node.js dependencies
        if: matrix.language == 'javascript'
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('my-javascript-project/package-lock.json') }}  
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies (JavaScript)
        if: matrix.language == 'javascript'
        run: |
          cd my-javascript-project
          npm ci

      - name: Run Jest tests (JavaScript)
        if: matrix.language == 'javascript'
        run: |
          cd my-javascript-project
          npm test  # Run Jest unit tests

      # Python Testing
      - name: Set up Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        if: matrix.language == 'python'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('my-python-project/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (Python)
        if: matrix.language == 'python'
        run: |
          cd my-python-project
          pip install -r requirements.txt

      - name: Run pytest (Python)
        if: matrix.language == 'python'
        run: |
          cd my-python-project
          pytest  # Run pytest unit tests
